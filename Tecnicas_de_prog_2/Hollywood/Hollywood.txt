Hollywood
4 premissas:
Problemas grandes serão decompostos em entidades utilizando alguma forma de abstração (objetos, modulos)
As entidades nunca serão chamadas diretamente para realizar uma ação
As entidades fornecem interfaces para outras entidades poderem registrar quando são chamadas
Durante o processo as entidades chamam entidades que já pussuem registro de que foram chamadas.

Inversão de controle é o nome dado ao padrão de desenvolvimento de programas de computadores onde a sequência (controle) de chamadas dos métodos é invertida em relação à programação tradicional, ou seja, ela não é determinada diretamente pelo programador. Este controle é delegado a uma infraestrutura de software muitas vezes chamada de container ou a qualquer outro componente que possa tomar controle sobre a execução. Esta é uma característica muito comum a alguns frameworks. É usado para tornar um código modular e tem muitas aplicações em orientação a objetos.

Um exemplo em programação tradicional, a função principal de uma aplicação pode chamar funções que levam o usuário para um menu contendo a lista de comandos disponíveis e consultar a instancia selecionada.
A biblioteca apresentada pelo menu iria retornar a opção selecionada como o valor chamado por uma função e a função principal (main) usaria esse valor para executar um comando associado. Esse estilo é tradicionalmente utilizado em programação textual.  Por exemplo, um cliente utilizando email recebe uma tela com comandos (ler, escrever, enviar) e a execução do programa fica bloqueada até que o usuário escolha um comando.

Agora, utilizando programação com inversão de controle, o programa seria escrito utilizando um framework (Uma biblioteca, componente reutilizavel, que gera uma funcionalidade genérica que pode ser alterada ao longo do codigo) que conhece o comportamento padrão e os elementos gráficos associados (Criação de janelas, menus, controle do mouse). Assim o codigo do programador iria preencher os buracos do framework fornecendo tabelas com os itens do menu e registrando subrotinas do codigo para cada item mas é o framework que analisa as ações do usuário e chama subrotinas quando um item do menu é selecionado. No mesmo exemplo de email, o framework pode acompanhar entradas tanto do mouse quando do teclado e chamar o comando escolhido pelo usuário por ambos jeitos e ao mesmo tempo monitorar a internet para verificar se novos emails chegaram e se chegaram atualizar a tela se alguma atividade na internet for detectada. O mesmo framework pode ser utilizado como esqueleto pode ser utilizado em aplicativos diferenciados como troca de mensgens, programas de planilhas, editores de texto. Por outro lado, o framework não conhece nada sobre navegadores da Web, planilhas ou editores de texto; implementar sua funcionalidade leva o programador a construir o código personalizado.

A inversão de controle carrega a forte conotação de que o código reutilizável e o código específico do problema são desenvolvidos independentemente, embora operem juntos em um aplicativo. Frameworks de software, callbacks, schedulers, loops de eventos, injeção de dependência e o método de modelo são exemplos de padrões de projeto que seguem o princípio de inversão de controle, embora o termo seja mais comumente usado no contexto de programação orientada a objetos.

 "Hollywood Principle: Don't call us, we'll call you".


O estilo de programação de Hollywood parece bastante artificial, mas tem uma propriedade interessante: ao invés de entralaçar a função que está chamando para a que será chamada em pontos específicos do programa (Ou seja, chamadas de função, onde a ligação é feita nomeando funções), reverte essa relação, permitindo que um receptor desencadeie ações em muitos chamadores em um momento determinado pelo receptor. Isto implica um tipo diferente de composição do módulo, como muitos módulos podem registrar handles (Funções que serão chamadas no futuro) para o mesmo evento em um provedor. Deve-se tomar cuidado para não deixar a legibilidade do código comprometida.

--

Implementação em F#

Utilização da biblioteca Observable - Informação de alterações de objetos.

Hollywood crista (python):
DataStorage
StopWordsFilter
WordFrequencyCounter

Na versão implementada em F#, cada entidade envia informações para uma camada IObservable mais alta que modifica o que precisa ser modificado e a saída é enviada para as entidades localizadas nas camadas para que elas possam usar esse resultado como bem entenderem. 

Imagem: Hollywood-em-F-0-Schematics

A camada mais alta gerencia uma tentativa de contar a frequencia dos termos de um arquivo e remover as palavras desnecessárias usando outras entidades de uma camada mais baixa.


Imagem: Hollywood-em-F-1-Stopwordsfile


A versão implementada de DataStorage será um Observable event que por sua vez notificará membros de camada mais baixas para que as entidades possam se inscrever e ser notificadas quando DataStorage conseguir ler as palavras do arquivo inserido


Imagem: Hollywood-em-F-2-DataStorage

A implementação do StopWordFilter tem como objetivo fazer com que a entidade se inscreva no canal de DataStorage e que quando houver um novo valor inserido, leia as stopwords e as filtre e em seguida liberar o novo arquivo com palavras filtradas para entidades inscritas neste canal.


Imagem: Hollywood-em-F-3-Stopwords


Finalmente o WordFrequencyCounter, que pega um Observable event e imprime as 25 palavras mais frequentes.


Imagem: Hollywood-em-F-4-WordFrequency


Para juntar tudo em uma string, criamos um novo evento. 

Imagem: Hollywood-em-F-5-RunArgs.